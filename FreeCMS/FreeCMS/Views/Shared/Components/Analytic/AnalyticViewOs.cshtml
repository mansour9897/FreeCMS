@model FreeCMS.Areas.Core.ViewModels.Analytic.ChartModel
<div class="box box-solid">
    <div class="box-header with-border">
        <h3 class="box-title">سیستم عامل ها</h3>
    </div><!-- ./box-header -->
    <div class="box-body">
        @if(Model != null )
        {
            <div>
                <canvas id="os-chart"></canvas>
            </div>            
        }
        else
        {
            <div class="tex-center">
                <h4>داده ای وجود ندارد.</h4>
            </div>
        }
        
    </div><!-- ./box-bosy -->
</div><!-- ./box -->
<script>
    Chart.defaults.global.defaultFontFamily = "BKoodak";
    Chart.plugins.unregister(ChartDataLabels);
    osColors = ['rgb(54, 162, 235)','rgb(153, 102, 255)','rgb(201, 203, 207)','rgb(255, 99, 132)','rgb(255, 159, 64)','rgb(75, 192, 192)','rgb(54, 162, 235)','rgb(255, 205, 86)','rgb(255, 99, 132)','rgb(54, 162, 235)'];
    var data = [{
        data: @Html.Raw(Model.Data),
        backgroundColor: osColors,
        label: "@Html.Raw(Model.Label)",
    }];
    var options = {
        responsive: true,
        tooltips: {
            enabled: true
        },
        tooltips:{
            callbacks:{
                label:function(tooltipItem,data){
                    //get the concerned dataset
                    var dataset = data.datasets[tooltipItem.datasetIndex];
                    //calculate the total of this data set
                    var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
                        return previousValue + currentValue;
                    });
                    //get the current items value
                    var currentValue = dataset.data[tooltipItem.index];
                    //calculate the precentage based on the total and current item, also this does a rough rounding to give a whole number
                    var percentage = Math.floor(((currentValue/total) * 100)+0.5);

                    return percentage + "%";
                }
            }
        },
        plugins: {
            datalabels: {
                display:false
            }
        }
    };
    var osCtx = document.getElementById("os-chart").getContext('2d');
    var osChart = new Chart(osCtx, {
        type: 'pie',
        data: {
            datasets: data,
            labels: @Html.Raw(Model.Labels),
        },
        options: options,
        plugins: [ChartDataLabels]
    });
</script>